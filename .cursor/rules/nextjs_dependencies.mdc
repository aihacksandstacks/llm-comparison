# Next.js Project Dependencies Management

This rule provides guidance for managing dependencies in Next.js projects, particularly those using shadcn/ui and Tailwind CSS.

## Core Dependencies

### Production Dependencies
```json
{
  "dependencies": {
    "next": "^14.2.26",  // Minimum version for security patches
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "@radix-ui/react-slot": "^1.1.2",  // Required by shadcn/ui
    "class-variance-authority": "^0.7.1",  // Required by shadcn/ui
    "clsx": "^2.1.1",  // Required by shadcn/ui
    "lucide-react": "^0.486.0",  // Icons library
    "tailwind-merge": "^3.1.0"  // Required by shadcn/ui
  }
}
```

### Development Dependencies
```json
{
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.4.17",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "tailwindcss-animate": "^1.0.7",
    "typescript": "^5",
    "eslint": "^8",
    "eslint-config-next": "^14.2.26"  // Should match Next.js version
  }
}
```

## Version Requirements

1. **Next.js and Related**:
   - `next`: Use ^14.2.26 or later for security fixes
   - `eslint-config-next`: Should match Next.js version
   - `react` and `react-dom`: Must be ^18.2.0 for Next.js 14

2. **Tailwind CSS Stack**:
   - `tailwindcss`: Use ^3.4.1 or later
   - `postcss`: Use ^8.4.35 or later
   - `autoprefixer`: Use ^10.4.17 or later
   - `tailwindcss-animate`: Use ^1.0.7 for animations

3. **shadcn/ui Requirements**:
   - `@radix-ui/react-slot`: ^1.1.2
   - `class-variance-authority`: ^0.7.1
   - `clsx`: ^2.1.1
   - `tailwind-merge`: ^3.1.0

## Configuration Files

1. **postcss.config.js**:
```javascript
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  }
}
```

2. **tailwind.config.js**:
```javascript
/** @type {import('tailwindcss').Config} */
module.exports = {
  darkMode: ["class"],
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  prefix: "",  // Required by shadcn/ui
  theme: {
    // ... theme configuration
  },
  plugins: [require("tailwindcss-animate")]
}
```

## Installation Best Practices

1. **Clean Installation**:
   ```bash
   rm -rf node_modules package-lock.json .next
   npm install
   ```

2. **Dependency Updates**:
   - Always use exact versions for Next.js and its config
   - Use caret (^) for other dependencies to get minor updates
   - Run `npm audit` regularly to check for vulnerabilities

3. **Security Considerations**:
   - Keep Next.js updated to latest secure version
   - Run `npm audit` before deployment
   - Fix critical vulnerabilities immediately

## Common Issues and Solutions

1. **PostCSS Configuration**:
   - Always use object syntax for plugins
   - Don't use require() statements in the config
   - Keep configuration minimal

2. **Tailwind CSS Setup**:
   - Ensure proper content paths in tailwind.config.js
   - Include all file extensions (.js, .ts, .jsx, .tsx, .mdx)
   - Don't mix different versions of Tailwind packages

3. **ESLint Configuration**:
   - Keep eslint-config-next version matched with Next.js
   - Use @eslint scoped packages for modern tooling
   - Avoid deprecated ESLint plugins

## Maintenance

1. **Regular Updates**:
   - Check for updates monthly
   - Update dependencies in this order:
     1. Next.js and React
     2. Tailwind CSS and PostCSS
     3. shadcn/ui dependencies
     4. Development tools

2. **Version Control**:
   - Commit package.json and package-lock.json
   - Document major version updates
   - Test thoroughly after updates

3. **Performance**:
   - Monitor bundle size after updates
   - Check for duplicate dependencies
   - Remove unused dependencies